package com.bhs.gtk.condition.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * Condition
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-09-22T11:39:28.124829500+05:30[Asia/Calcutta]")

public class Condition   {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("code")
  private String code = null;

  @JsonProperty("parseTree")
  private String parseTree = null;

  public Condition id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * unique identifier of the condition. It is auto-generated by system, API-client need not provide it during creation of screener. If provided the value will be ignored.
   * @return id
  **/
  @ApiModelProperty(value = "unique identifier of the condition. It is auto-generated by system, API-client need not provide it during creation of screener. If provided the value will be ignored.")

  @Valid

  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Condition name(String name) {
    this.name = name;
    return this;
  }

  /**
   * name of condition
   * @return name
  **/
  @ApiModelProperty(required = true, value = "name of condition")
  @NotNull


  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Condition description(String description) {
    this.description = description;
    return this;
  }

  /**
   * description of condition
   * @return description
  **/
  @ApiModelProperty(value = "description of condition")


  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Condition code(String code) {
    this.code = code;
    return this;
  }

  /**
   * text representing condition code
   * @return code
  **/
  @ApiModelProperty(value = "text representing condition code")


  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Condition parseTree(String parseTree) {
    this.parseTree = parseTree;
    return this;
  }

  /**
   * output after parsing grammar
   * @return parseTree
  **/
  @ApiModelProperty(value = "output after parsing grammar")


  public String getParseTree() {
    return parseTree;
  }

  public void setParseTree(String parseTree) {
    this.parseTree = parseTree;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Condition condition = (Condition) o;
    return Objects.equals(this.id, condition.id) &&
        Objects.equals(this.name, condition.name) &&
        Objects.equals(this.description, condition.description) &&
        Objects.equals(this.code, condition.code) &&
        Objects.equals(this.parseTree, condition.parseTree);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, code, parseTree);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Condition {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    parseTree: ").append(toIndentedString(parseTree)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

