/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.bhs.gtk.condition.api;

import com.bhs.gtk.condition.model.ConditionResultResponse;
import com.bhs.gtk.condition.model.Error;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-01-27T06:56:31.566079200+05:30[Asia/Calcutta]")

@Api(value = "Result", description = "the Result API")
public interface ResultApi {

    @ApiOperation(value = "get result of conditions", nickname = "getResult", notes = "get result of conditions for given id, marketTime and scripName", response = ConditionResultResponse.class, tags={ "result", })
    @ApiResponses(value = { 
        @ApiResponse(code = 206, message = "Request sucessfully processed.", response = ConditionResultResponse.class),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class),
        @ApiResponse(code = 404, message = "Requested condition not found.", response = Error.class) })
    @RequestMapping(value = "/v1/condition/{id}/{marketTime}/{scripName}/result",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ConditionResultResponse> getResult(@ApiParam(value = "",required=true) @PathVariable("id") UUID id,@ApiParam(value = "",required=true) @PathVariable("marketTime") String marketTime,@ApiParam(value = "",required=true) @PathVariable("scripName") String scripName);

}
