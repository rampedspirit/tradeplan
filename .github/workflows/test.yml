name: Test

on:
  workflow_dispatch:
    inputs:
     StackNamePrefix:
      required: true
      description: Prefix for Stack Name
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch cloudformation stack info
        id: cfnStackInfo
        run: echo ::set-output name=appUrl::$(aws cloudformation --region ap-south-1 describe-stacks --stack-name ${{ github.event.inputs.StackNamePrefix }}-ECS-APP-Stack --query Stacks[0].Outputs[0].OutputValue)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-south-1'
      - name: Create prod environment config file
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: ./frontend/greentick-webapp/src/environments/environment.prod.ts
          contents: |
            "export const environment = {
            production: true,
            filterApiBasePath: "http://${{ steps.cfnStackInfo.outputs.appUrl }}",
            conditionApiBasePath: http://GTK-Demo-ECS-APP-Stack-alb-545786723.ap-south-1.elb.amazonaws.com,
            screenerApiBasePath: http://GTK-Demo-ECS-APP-Stack-alb-545786723.ap-south-1.elb.amazonaws.com
            };"
          write-mode: append
      - name: Read environment.prod.ts
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./frontend/greentick-webapp/src/environments/environment.prod.ts
      - name: Echoenvironment.prod.ts
        run: echo "${{ steps.package.outputs.content }}"
