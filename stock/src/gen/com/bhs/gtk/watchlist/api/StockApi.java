/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.bhs.gtk.watchlist.api;

import com.bhs.gtk.watchlist.model.Error;
import com.bhs.gtk.watchlist.model.StockResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-04-21T09:53:08.196249800+05:30[Asia/Calcutta]")

@Api(value = "Stock", description = "the Stock API")
public interface StockApi {

    @ApiOperation(value = "get all stocks", nickname = "getAllStocks", notes = "get stock list", response = StockResponse.class, responseContainer = "List", tags={ "stock", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request sucessfully processed.", response = StockResponse.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class) })
    @RequestMapping(value = "/v1/stock",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<StockResponse>> getAllStocks();


    @ApiOperation(value = "update all stocks", nickname = "updateAllStocks", notes = "update stock list", tags={ "stock", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request sucessfully processed."),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class) })
    @RequestMapping(value = "/v1/stock/update",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> updateAllStocks(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "exchange", required = true) String exchange,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "url", required = true) String url);

}
