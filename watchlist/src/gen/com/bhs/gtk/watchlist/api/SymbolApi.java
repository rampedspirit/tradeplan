/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.bhs.gtk.watchlist.api;

import com.bhs.gtk.watchlist.model.Error;
import com.bhs.gtk.watchlist.model.SymbolResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-05-18T20:00:55.380225700+05:30[Asia/Calcutta]")

@Api(value = "Symbol", description = "the Symbol API")
public interface SymbolApi {

    @ApiOperation(value = "get all symbols", nickname = "getAllSymbols", notes = "get symbol list", response = SymbolResponse.class, responseContainer = "List", tags={ "symbol", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request sucessfully processed.", response = SymbolResponse.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class) })
    @RequestMapping(value = "/v1/watchlist/symbol",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<SymbolResponse>> getAllSymbols();


    @ApiOperation(value = "update all symbols", nickname = "updateAllSymbols", notes = "update symbol list", tags={ "symbol", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request sucessfully processed."),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class) })
    @RequestMapping(value = "/v1/watchlist/symbol/update",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> updateAllSymbols(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "exchange", required = true) String exchange,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "url", required = true) String url);

}
