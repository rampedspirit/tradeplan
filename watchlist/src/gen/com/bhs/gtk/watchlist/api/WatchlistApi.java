/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.bhs.gtk.watchlist.api;

import com.bhs.gtk.watchlist.model.Error;
import java.util.UUID;
import com.bhs.gtk.watchlist.model.WatchlistCreateRequest;
import com.bhs.gtk.watchlist.model.WatchlistPatchData;
import com.bhs.gtk.watchlist.model.WatchlistResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-03-11T13:49:03.033972200+05:30[Asia/Calcutta]")

@Api(value = "Watchlist", description = "the Watchlist API")
public interface WatchlistApi {

    @ApiOperation(value = "create new watchlist", nickname = "createWatchlist", notes = "create new watchlist", response = WatchlistResponse.class, tags={ "watchlist", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "watchlist created successfully.", response = WatchlistResponse.class),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class) })
    @RequestMapping(value = "/v1/watchlist",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<WatchlistResponse> createWatchlist(@ApiParam(value = "payload to create watchlist" ,required=true )  @Valid @RequestBody WatchlistCreateRequest body);


    @ApiOperation(value = "delete", nickname = "deleteWatchlist", notes = "delete watchlist of given id", response = WatchlistResponse.class, tags={ "watchlist", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "delete watchlist.", response = WatchlistResponse.class),
        @ApiResponse(code = 404, message = "Requested watchlist not found.", response = Error.class) })
    @RequestMapping(value = "/v1/watchlist/{watchlistId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<WatchlistResponse> deleteWatchlist(@ApiParam(value = "",required=true) @PathVariable("watchlistId") UUID watchlistId);


    @ApiOperation(value = "get all watchlist", nickname = "getAllWatchlists", notes = "get watchlist", response = WatchlistResponse.class, responseContainer = "List", tags={ "watchlist", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Request sucessfully processed.", response = WatchlistResponse.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class) })
    @RequestMapping(value = "/v1/watchlist",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<WatchlistResponse>> getAllWatchlists();


    @ApiOperation(value = "get watchlist of given id", nickname = "getWatchlist", notes = "get watchlist", response = WatchlistResponse.class, tags={ "watchlist", })
    @ApiResponses(value = { 
        @ApiResponse(code = 206, message = "Request sucessfully processed.", response = WatchlistResponse.class),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class),
        @ApiResponse(code = 404, message = "Requested watchlist not found.", response = Error.class) })
    @RequestMapping(value = "/v1/watchlist/{watchlistId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<WatchlistResponse> getWatchlist(@ApiParam(value = "",required=true) @PathVariable("watchlistId") UUID watchlistId);


    @ApiOperation(value = "update watchlist", nickname = "updateWatchlist", notes = "update watchlist of given id", response = WatchlistResponse.class, tags={ "watchlist", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Watchlist with give id is updated successfully.", response = WatchlistResponse.class),
        @ApiResponse(code = 400, message = "Request is not understood.", response = Error.class),
        @ApiResponse(code = 404, message = "Requested watchlist not found.", response = Error.class) })
    @RequestMapping(value = "/v1/watchlist/{watchlistId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<WatchlistResponse> updateWatchlist(@ApiParam(value = "Payload to change watchlist of given Id." ,required=true )  @Valid @RequestBody List<WatchlistPatchData> body,@ApiParam(value = "",required=true) @PathVariable("watchlistId") UUID watchlistId);

}
